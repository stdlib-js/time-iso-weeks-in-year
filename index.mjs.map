{"version":3,"file":"index.mjs","sources":["../lib/iso_weeks_in_year.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar isDateObject = require( '@stdlib/assert-is-date-object' );\nvar isInteger = require( '@stdlib/assert-is-integer' ).isPrimitive;\nvar format = require( '@stdlib/string-format' );\nvar floor = require( '@stdlib/math-base-special-floor' );\n\n\n// VARIABLES //\n\nvar SHORT_YEAR = 52;\nvar LONG_YEAR = 53;\n\n\n// FUNCTIONS //\n\n/**\n* Formula for determining if a year is \"long\" or \"short\".\n*\n* @private\n* @param {integer} yr - year\n* @returns {integer} result\n*/\nfunction p( yr ) {\n\tvar v = yr + floor( yr/4 ) - floor( yr/100 ) + floor( yr/400 );\n\treturn v % 7;\n}\n\n\n// MAIN //\n\n/**\n* Returns the number of ISO weeks in a year.\n*\n* @param {(integer|Date)} value - year or `Date` object\n* @throws {TypeError} must provide either an integer or a `Date` object\n* @returns {integer} number of ISO weeks in a year\n*\n* @example\n* var num = isoWeeksInYear();\n* // returns <number>\n*\n* @example\n* var num = isoWeeksInYear( 2015 );\n* // returns 53\n*\n* @example\n* var num = isoWeeksInYear( 2017 );\n* // returns 52\n*/\nfunction isoWeeksInYear( value ) {\n\tvar yr;\n\tif ( arguments.length ) {\n\t\tif ( isDateObject( value ) ) {\n\t\t\tyr = value.getFullYear();\n\t\t} else if ( isInteger( value ) ) {\n\t\t\tyr = value;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an integer or a `Date` object. Value: `%s`.', value ) );\n\t\t}\n\t} else {\n\t\t// Note: cannot cache as application could cross over into a new year:\n\t\tyr = ( new Date() ).getFullYear();\n\t}\n\tif ( p( yr ) === 4 || p( yr-1 ) === 3 ) {\n\t\treturn LONG_YEAR;\n\t}\n\treturn SHORT_YEAR;\n}\n\n\n// EXPORTS //\n\nmodule.exports = isoWeeksInYear;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Determine the number of ISO weeks in a year according to the Gregorian calendar.\n*\n* @module @stdlib/time-iso-weeks-in-year\n*\n* @example\n* var isoWeeksInYear = require( '@stdlib/time-iso-weeks-in-year' );\n*\n* var num = isoWeeksInYear();\n* // returns <number>\n*\n* num = isoWeeksInYear( 2015 );\n* // returns 53\n*\n* num = isoWeeksInYear( 2017 );\n* // returns 52\n*/\n\n// MODULES //\n\nvar isoWeeksInYear = require( './iso_weeks_in_year.js' );\n\n\n// EXPORTS //\n\nmodule.exports = isoWeeksInYear;\n"],"names":["isDateObject","require$$0","isInteger","require$$1","isPrimitive","format","require$$2","floor","require$$3","p","yr","lib","value","arguments","length","getFullYear","TypeError","Date"],"mappings":";;0VAsBA,IAAIA,EAAeC,EACfC,EAAYC,EAAuCC,YACnDC,EAASC,EACTC,EAAQC,EAkBZ,SAASC,EAAGC,GAEX,OADQA,EAAKH,EAAOG,EAAG,GAAMH,EAAOG,EAAG,KAAQH,EAAOG,EAAG,MAC9C,EAgDZ,IChDAC,EDyBA,SAAyBC,GACxB,IAAIF,EACJ,GAAKG,UAAUC,OACd,GAAKd,EAAcY,GAClBF,EAAKE,EAAMG,kBACL,CAAA,IAAKb,EAAWU,GAGtB,MAAM,IAAII,UAAWX,EAAQ,oFAAqFO,IAFlHF,EAAKE,OAMNF,GAAK,IAAMO,MAASF,cAErB,OAAiB,IAAZN,EAAGC,IAA4B,IAAdD,EAAGC,EAAG,GArDb,GADC"}